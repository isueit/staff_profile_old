<?php
use \Drupal\Core\Field\FieldDefinitionInterface;
use \Drupal\Core\Session\AccountInterface;
use \Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Access\AccessResult;

/**
 * @file
 * Staff Profile module
 */

 /**
  * Implements hook_entity_field_access()
  */
 function staff_profile_entity_field_access($operation, $field_defintition, $account, $items = NULL) {
   $admin_options = array('weight', 'status', 'user_id', 'field_from_staff_directory', 'field_department_id');
   if ($field_defintition->getTargetEntityTypeId() == 'staff_profile_profile' && in_array($field_defintition->getName(), $admin_options) && $operation == 'edit') {
     if ($account->hasPermission('administer staff profile entity')) {
       return AccessResult::allowedIfHasPermission($account, 'administer staff profile entity');
     } else {
       return AccessResult::forbidden();
     }
   }
   return AccessResult::neutral();
 }

 /**
  * Implements hook_Entity_Type_view_alter()
  * Uses label (name) as title, page meta title remains the same
  */
function staff_profile_staff_profile_profile_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  $build['#title'] = $entity->label();
}

/**
 * Add wildcards to text in search
 */
function staff_profile_search_preprocess($text, $langcoge = NULL) {
  debug("called");
  $text = explode(" ", $text);
  foreach ($text as $name => $key) {
    if (preg_match("/\%/", $key) == FALSE) {
      $keys[$name] = "%" . $key . "%";
    }
  }
  $text = implode(" ", $keys);
  return $text;
}


//Trigger on creation of new user to give them ownership
function staff_profile_user_insert(Drupal\Core\Entity\EntityInterface $user) {
  $net_id = $user->getUsername();
  $local_profile = \Drupal::entityTypeManager()->getStorage('staff_profile_profile')->loadByProperties(['netid' => $net_id]);
  if ($local_profile[0]) {
    $local_profile[0]->setOwnerId($user->id())
      ->setOwner($user)
      ->setOwnerId($user->id())
      ->user_id = $user->id()
    ->save();
  } else {
    $newEntity = \Drupal\staff_profile\Entity\StaffProfile::create([
      'netid' => $net_id,
      'field_email' => $user->getEmail(),
      'user_id' => $user->id(),
    ]);
    $newEntity->setUnpublished()
    ->setOwnerId($user->id())
    ->setOwner($user)
    ->save();
  }
}

/**
 * Implements hook_theme_suggestions_alter()
 */
// function staff_profile_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
//   if ($hook == 'search_result') {
//     debug($hook);
//     //$suggestions[] = "search_result__staff_profile_profile_search";
//     debug($suggestions);
//   } elseif ($hook == 'item_list') {
//     debug($hook);
//     //$suggestions[0] = "item_list__search_results__staff_profile_profile_search";
//     debug($suggestions);
//   }
// }

/**
 * Implements hook_theme()
 */
function staff_profile_theme($existing, $type, $theme, $path) {
  return [
    'search_result__staff_profile_profile_search' => [
      'variables' => ['url' => NULL, 'title' => NULL, 'snippet' => NULL, 'info' => NULL, 'plugin_id' => NULL, 'title_prefix' => NULL, 'title_suffix' => NULL, 'info_split' => NULL],
    ],
  ];
}
